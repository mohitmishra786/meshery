consumes:
    - application/json
    - multipart/form-data
produces:
    - application/json
schemes:
    - http
swagger: "2.0"
info:
    title: Meshery API.
    license:
        name: Apache-2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.txt
    version: 0.4.27
    description: |-
        the purpose of this application is to provide an application
        that is using plain go code to define an API

        This should demonstrate all the possible comment annotations
        that are available to turn go code into a fully compliant swagger 2.0 spec
basePath: /
paths:
    /api/filter/catalog/unpublish:
        delete:
            responses:
                "200":
                    description: ""
            description: Unpublishes filter from Meshery Catalog by setting visibility to private and removing catalog data from website
            tags:
                - FiltersAPI
            summary: Handle UnPublish for a Meshery Filter
            operationId: idUnPublishCatalogFilterHandler
    /api/telemetry/metrics/boards:
        post:
            parameters:
                - required: true
                  schema:
                    type: array
                    items: {}
                  name: Body
                  in: body
            responses:
                "200":
                    description: ""
            description: Used to persist selected board and panels
            tags:
                - PrometheusAPI
            summary: Handle POST request for Prometheus board
            operationId: idPostPrometheusBoard
    /api/events/status:
        put:
            description: Bulk update status for the events associated with the ids.
            summary: Handle PUT request to update event status in bulk.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: Returns event
    /api/perf/profile:
        get:
            operationId: idRunPerfTest
            parameters:
                - name: Query
                  in: query
                - name: Body
                  in: body
                  schema: {}
            responses:
                "200":
                    description: ""
            description: Runs the load test with the given parameters
            tags:
                - PerfAPI
            summary: Handle GET request to run a test
    /api/user/token:
        get:
            summary: Handle GET request for tokens
            operationId: idGetTokenProvider
            description: |-
                Returns token from the actual provider in a file
                response:
                200:
            tags:
                - UserAPI
        post:
            description: |-
                Receives token from the actual provider
                response:
                200:
            tags:
                - UserAPI
            summary: Handle POST request for tokens
            operationId: idPostTokenProvider
    /api/patterns:
        delete:
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            tags:
                - PatternsAPI
            summary: Handle Delete for multiple Meshery Patterns
            operationId: idDeleteMesheryPattern
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
            responses:
                "200":
                    description: ""
    /api/telemetry/metrics/grafana/query:
        get:
            description: Used for handling Grafana queries
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana queries
            operationId: idGetGrafanaQuery
            responses:
                "200":
                    description: ""
    /api/identity/users/keys:
        get:
            tags:
                - UserKeysAPI
            summary: Handles GET for all Keys for users
            operationId: idGetAllUsersKeysHandler
            responses:
                "200":
                    description: Returns users Keys
                    headers:
                        Body: {}
            description: Returns all keys for user
    /api/meshmodels/categories:
        get:
            tags:
                - GetMeshmodelCategories
            summary: Handle GET request for getting all meshmodel categories
            operationId: idGetMeshmodelCategories
            responses:
                "200":
                    description: Returns meshmodel categories
            description: |-
                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={categoryName}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
    /api/pattern/{id}:
        get:
            parameters:
                - x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
            responses:
                "200":
                    description: Returns a single meshery pattern
            description: Fetches the pattern with the given id
            tags:
                - PatternsAPI
            summary: Handle GET for a Meshery Pattern
            operationId: idGetMesheryPattern
        delete:
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            tags:
                - PatternsAPI
            summary: Handle Delete for multiple Meshery Patterns
            operationId: idDeleteMesheryPattern
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: ""
    /api/system/kubernetes/contexts:
        get:
            description: |-
                # Contexts can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={contextname}``` If search is non empty then a greedy search is performed
            tags:
                - GetAllContexts
            summary: Handle GET request for all kubernetes contexts.
            operationId: idGetAllContexts
            responses:
                "200":
                    description: Returns K8s contexts
        post:
            description: Returns the context list for a given k8s config
            tags:
                - SystemAPI
            summary: Handle POST requests for Kubernetes Context list
            operationId: idPostK8SContexts
            responses:
                "200":
                    description: Returns kubernetes context list
    /api/system/sync:
        get:
            tags:
                - SystemAPI
            summary: Handle GET request for config sync
            operationId: idSystemSync
            responses:
                "200":
                    description: Returns User Load Test Preferencee
            description: Used to send session data to the UI for initial sync
    /api/user/profile/{id}:
        get:
            operationId: idGetUserByIDHandler
            responses:
                "200":
                    description: Returns user info
            description: Returns User info
            tags:
                - UserAPI
            summary: Handle GET for User info by ID
    /api/user/schedules:
        get:
            operationId: idGetSchedules
            responses:
                "200":
                    description: Returns List of saved schedules
            description: |-
                # Returns the list of all the schedules saved by the current user

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            tags:
                - SchedulesAPI
            summary: Handle GET request for Schedules
        post:
            description: Save schedule using the current provider's persistence mechanism
            tags:
                - SchedulesAPI
            summary: Handle POST request for Schedules
            operationId: idPostSchedules
            responses:
                "200":
                    description: Returns a single schedules
    /api/application/types:
        get:
            operationId: typeGetMesheryApplication
            responses:
                "200":
                    schema:
                        type: array
                        items: {}
                    description: Returns Meshery application types
            description: Get application file types
            tags:
                - ApplicationsAPI
            summary: Handle GET request for Meshery Application types
    /api/integrations/connections/status:
        get:
            description: Get all connections status
            tags:
                - GetConnectionsStatus
            summary: Handle GET request for getting all connections status
            operationId: idGetConnectionsStatus
            responses:
                "200":
                    description: Returns all connections Status
    /api/integrations/connections/{connectionId}:
        put:
            description: Updates existing connection using ID
            tags:
                - PutConnectionById
            summary: Handle PUT request for updating an existing connection by connection ID
            operationId: idPutConnectionById
            responses:
                "200":
                    description: Returns a single connection
        delete:
            description: Deletes existing connection
            tags:
                - DeleteConnection
            summary: Handle DELETE request for deleting an existing connection by connection ID
            operationId: idDeleteConnection
            responses:
                "200":
                    description: ""
    /api/meshmodels/models/{model}/components:
        get:
            operationId: idGetMeshmodelComponentByModel
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/components```
                Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelComponentByModel
            summary: Handle GET request for getting meshmodel components of a specific model. The component type/model name should be lowercase like "kubernetes", "istio"
    /api/filter/file/{id}:
        get:
            summary: Handle GET request for filter file with given id
            operationId: idGetFilterFile
            responses:
                "200":
                    description: Returns a single meshery filter
            description: Returns the Meshery Filter file saved by the current user with the given id
            tags:
                - FiltersAPI
    /api/pattern/catalog:
        get:
            description: |-
                # Patterns can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10.

                ```?search={patternname}``` If search is non empty then a greedy search is performed
            tags:
                - PatternsAPI
            summary: Handle GET request for catalog patterns
            operationId: idGetCatalogMesheryPatternsHandler
            responses:
                "200":
                    description: Returns all meshery patterns
    /api/pattern/clone/{id}:
        post:
            tags:
                - PatternsAPI
            summary: Handle Clone for a Meshery Pattern
            operationId: idCloneMesheryPattern
            responses:
                "200":
                    description: ""
            description: 'Creates a local copy of a published pattern with id: id'
    /api/system/adapters/available:
        get:
            summary: Handle GET request for available adapters
            operationId: idGetAvailableAdapters
            responses:
                "200":
                    description: Return all the adapters
                    schema:
                        type: array
                        items: {}
            description: Fetches and returns all the adapters available for deployment
            tags:
                - SystemAPI
    /api/policies/run_policy:
        post:
            responses: {}
            description: Handle POST request for running the set of policies on the design file, the policies are picked from the policies directory and query is sent to find all the relationships around the services in the given design file
            tags:
                - GetRegoPolicyForDesignFile
            operationId: idGetRegoPolicyForDesignFile
    /api/telemetry/metrics/grafana/ping:
        get:
            description: Used to initiate a Grafana ping
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana ping
            operationId: idGetGrafanaPing
            responses:
                "200":
                    description: ""
    /provider:
        get:
            description: Servers providers UI
            tags:
                - ProvidersAPI
            summary: Handle GET request to provider UI
            operationId: idProvider
            responses:
                "200":
                    description: ""
    /api/user/prefs/perf:
        get:
            description: Used for fetching load test preferences
            tags:
                - UserAPI
            summary: Handle GET request for load test preferences
            operationId: idGetLoadPreferences
            parameters:
                - name: uuid
                  in: query
                  type: string
                  format: uuid
                  x-go-name: UUID
            responses:
                "200":
                    description: Returns load test preferences
        post:
            parameters:
                - name: Body
                  in: body
                  schema: {}
            responses:
                "200":
                    description: ""
            description: Used for persisting load test preferences
            tags:
                - UserAPI
            summary: Handle POST request for load test preferences
            operationId: idPostLoadPreferences
        delete:
            summary: Handle DELETE request for load test preferences
            operationId: idDeleteLoadPreferences
            parameters:
                - name: uuid
                  in: query
                  type: string
                  format: uuid
                  x-go-name: UUID
            responses:
                "200":
                    description: ""
            description: Used for deleting load test preferences
            tags:
                - UserAPI
    /api/meshmodels/models/{model}:
        get:
            summary: Handle GET request for getting all meshmodel models. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelModelsByName
            responses:
                "200":
                    description: Return meshmodel models with the count of duplicates
            description: |-
                # Returns a list of registered models across all categories

                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelModelsByName
    /api/user/schedules/{id}:
        get:
            operationId: idGetSingleSchedule
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: Returns a single schedules
            description: Fetches and returns the schedule with the given id
            tags:
                - SchedulesAPI
            summary: Handle GET request for Schedules
        delete:
            description: Deletes a schedule with the given id
            tags:
                - SchedulesAPI
            summary: Handle DELETE request for Schedules
            operationId: idDeleteSchedules
            parameters:
                - format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: Returns List of saved schedules
    /api/meshmodels/models:
        get:
            responses:
                "200":
                    description: Return meshmodel models with the count of duplicates
            description: |-
                # Returns a list of registered models across all categories

                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={modelname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelModels
            summary: Handle GET request for getting all meshmodel models
            operationId: idGetMeshmodelModels
    /api/user/performance/profiles:
        get:
            summary: Handle GET requests for performance profiles
            operationId: idGetPerformanceProfiles
            responses:
                "200":
                    description: Returns all the performance profiles
            description: |-
                Returns the list of all the performance profiles saved by the current user

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={profilename}``` If search is non empty then a greedy search is performed
            tags:
                - PerformanceAPI
        post:
            parameters:
                - schema: {}
                  name: Body
                  in: body
            responses:
                "200":
                    description: Returns a single performance profile
            description: Save performance profile using the current provider's persistence mechanism
            tags:
                - PerformanceAPI
            summary: Handle POST requests for saving performance profile
            operationId: idSavePerformanceProfile
    /api/application/download/{id}/{sourcetype}:
        get:
            summary: Handle GET request for Meshery Application with of source content
            operationId: typeGetApplication
            parameters:
                - type: file
                  x-go-name: FormFile
                  name: Upload Yaml/Yml File
                  in: formData
            responses: {}
            description: Get the application source-content
            tags:
                - ApplicationsAPI
    /api/meshmodels/registrants:
        get:
            description: |-
                # Returns a list of registrants and summary count of its models, components, and relationships

                ```?page={pagenumber}``` Default page number is 1

                ```?order={field}``` orders on the passed field

                ```?search={Hostname}``` Gets host by the name

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            summary: Handle GET request for getting all meshmodel registrants
            operationId: GetMeshmodelRegistrants
            responses:
                "200":
                    description: Returns meshmodel registrants
    /api/provider/extension:
        get:
            description: handles the requests to serve react components from the provider package
            tags:
                - ProvidersAPI
            summary: Handle GET request for React Components
            operationId: idReactComponents
            responses:
                "200":
                    description: ""
    /api/user/logout:
        get:
            responses:
                "200":
                    description: ""
            description: Redirects user for auth or issues session
            tags:
                - UserAPI
            summary: Handlers GET request for User logout
            operationId: idGetUserLogout
    /api/meshmodel/components/register:
        post:
            description: Validate the given value with the given schema
            tags:
                - MeshmodelValidate
            summary: Handle POST request for registering meshmodel components.
            operationId: idPostMeshModelValidate
            responses:
                "200":
                    description: ""
    /api/meshmodel/generate:
        post:
            description: Generates Meshery Components for the given payload
            tags:
                - MeshmodelComponentGenerate
            summary: Handle POST request for component generation
            operationId: idPostMeshModelComponentGenerate
            responses:
                "200":
                    description: ""
    /api/telemetry/metrics/ping:
        get:
            description: Used to ping prometheus
            tags:
                - PrometheusAPI
            summary: Handle GET request for Prometheus Ping
            operationId: idGetPrometheusPing
            responses:
                "200":
                    description: ""
    /api/application/{sourcetype}:
        post:
            description: Updates the design for the provided application
            tags:
                - ApplicationsAPI
            summary: Handle POST request for Application Files
            operationId: idPutApplicationFileRequest
            responses:
                "200":
                    description: Fetches a single Meshery Application
    /api/meshmodels/categories/{category}/components:
        get:
            description: |-
                # Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelComponentByCategory
            summary: Handle GET request for getting meshmodel components of a specific model and category.
            operationId: idGetMeshmodelComponentByCategory
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
    /api/meshmodels/categories/{category}/models/{model}:
        get:
            description: |-
                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelModelsByCategoriesByModel
            summary: Handle GET request for getting all meshmodel models for a given category. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelModelsByCategoriesByModel
            responses:
                "200":
                    description: Return meshmodel models with the count of duplicates
    /api/meshmodels/categories/{category}/models/{model}/components/{name}:
        get:
            tags:
                - GetMeshmodelComponentsByNameByModelByCategory
            summary: Handle GET request for getting meshmodel components of a specific type by model and category.
            operationId: idGetMeshmodelComponentsByNameByModelByCategory
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/models/kubernetes/components/Namespace
                Components can be further filtered through query parameter

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
    /api/pattern/deploy:
        post:
            operationId: idPostDeployPattern
            parameters:
                - x-go-name: FormFile
                  name: Upload Yaml/Yml File
                  in: formData
                  type: file
            responses:
                "200":
                    description: ""
            description: Deploy an attached pattern with the request
            tags:
                - PatternsAPI
            summary: Handle POST request for Pattern Deploy
        delete:
            description: Delete a deployed pattern with the request
            tags:
                - PatternsAPI
            summary: Handle DELETE request for Pattern Deploy
            operationId: idDeleteDeployPattern
            responses:
                "200":
                    description: ""
    /api/content/design/share:
        post:
            responses:
                "200":
                    description: ""
                "403":
                    description: ""
                "500":
                    description: ""
            description: Used to share designs with others
            tags:
                - ShareContent
            summary: Handle POST request for Sharing content
            operationId: idPostShareContent
    /api/filter/{id}:
        get:
            description: Fetches the Meshery Filter with the given id
            tags:
                - FiltersAPI
            summary: Handle GET request for a Meshery Filter
            operationId: idGetMesheryFilter
            parameters:
                - required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
            responses:
                "200":
                    description: Returns a single meshery filter
        delete:
            summary: Handle Delete for a Meshery Filter
            operationId: idDeleteMesheryFilter
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: ""
            description: 'Deletes a meshery filter with ID: id'
            tags:
                - FiltersAPI
    /api/integrations/environments:
        get:
            description: |-
                # Environments can be further filtered through query parameters

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={environments_name}``` If search is non empty then a greedy search is performed

                ```?filter={condition}```
            tags:
                - EnvironmentsAPI
            summary: Handles GET for all Environments
            operationId: idGetEnvironments
            responses:
                "200":
                    description: Returns all environements
        post:
            description: Creates a new environment
            tags:
                - PostEnvironment
            summary: Handle POST request for creating a new environment
            operationId: idSaveEnvironment
            responses:
                "201":
                    description: ""
    /api/meshmodel/validate:
        post:
            description: Validate the given value with the given schema
            tags:
                - MeshmodelValidate
            summary: Handle POST request for validate
            operationId: idPostMeshModelValidate
            responses:
                "200":
                    description: ""
    /api/meshmodels/categories/{category}/models:
        get:
            tags:
                - GetMeshmodelModelsByCategories
            summary: Handle GET request for getting all meshmodel models for a given category. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelModelsByCategories
            responses:
                "200":
                    description: Return meshmodel models with the count of duplicates
            description: |-
                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={modelname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
    /api/integrations/connections:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            tags:
                - GetConnections
            summary: Handle GET request for getting all connections
            operationId: idGetConnections
            responses:
                "200":
                    headers:
                        page:
                            type: integer
                            format: int64
                        page_size:
                            type: integer
                            format: int64
                        total_count:
                            type: integer
                            format: int64
                        connections:
                            type: array
                            items: {}
                    description: ""
        post:
            description: Creates a new connection
            tags:
                - PostConnection
            summary: Handle POST request for creating a new connection
            operationId: idPostConnection
            responses:
                "201":
                    description: ""
    /api/meshmodels/components:
        get:
            description: |-
                # Components can be further filtered through query parameter

                ```?version={version}```

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetAllMeshmodelComponents
            summary: Handle GET request for getting meshmodel components across all models and categories
            operationId: idGetAllMeshmodelComponents
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
    /api/meshmodels/models/{model}/relationships:
        get:
            description: |-
                Example: ```/api/meshmodel/model/kubernetes/relationship```

                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetAllMeshmodelRelationships
            summary: Handle GET request for getting meshmodel relationships of a specific model
            operationId: idGetAllMeshmodelRelationshipsByModel
            responses:
                "200":
                    description: Returns meshmodel relationships
    /api/system/kubernetes/ping?connection_id={id}:
        get:
            summary: Handle GET request for Kubernetes ping
            operationId: idGetKubernetesPing
            responses:
                "200":
                    description: ""
            description: Fetches server version to simulate ping
            tags:
                - SystemAPI
    /api/system/kubernetes/register:
        post:
            description: Used to register Kubernetes components to Meshery from a kubeconfig file
            tags:
                - SystemAPI
            summary: Handle registration request for Kubernetes components
            operationId: idPostK8SRegistration
            responses:
                "202":
                    description: ""
                "400":
                    description: ""
                "500":
                    description: ""
    /api/telemetry/metrics/static-board:
        get:
            description: Used to fetch the static board
            tags:
                - PrometheusAPI
            summary: Handle GET request for Prometheus static board
            operationId: idGetPrometheusStaticBoard
            responses:
                "200":
                    description: Returns Prometheus static board
                    schema:
                        type: object
                        additionalProperties: false
    /api/meshmodels/models/{model}/policies/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/policies/{name}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelPoliciesByName
            summary: Handle GET request for getting meshmodel policies of a specific model by name.
            operationId: idGetMeshmodelPoliciesByName
            responses:
                "200":
                    description: Returns meshmodel policies
    /api/provider:
        get:
            summary: Handle GET request for the choice of provider
            operationId: idChoiceProvider
            parameters:
                - type: string
                  x-go-name: Provider
                  name: provider
                  in: query
            responses:
                "200":
                    description: ""
            description: Update the choice of provider in system
            tags:
                - ProvidersAPI
    /api/system/adapters:
        get:
            description: Fetches and returns all the adapters and ping adapters
            tags:
                - SystemAPI
            summary: Handle GET request for adapters
            operationId: idGetSystemAdapters
            parameters:
                - in: query
                  type: string
                  x-go-name: Adapter
                  name: adapter
            responses:
                "200":
                    description: Return all the adapters
                    schema:
                        type: array
                        items: {}
    /api/user/performance/profiles/{id}:
        get:
            description: Returns single performance profile with the given id
            tags:
                - PerformanceAPI
            summary: Handle GET requests for performance results of a profile
            operationId: idGetSinglePerformanceProfile
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: Returns a single performance profile
        delete:
            description: Deletes a performance profile with the given id
            tags:
                - PerformanceAPI
            summary: Handle Delete requests for performance profiles
            operationId: idDeletePerformanceProfile
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: ""
    /api/identity/users:
        get:
            description: |-
                # Users can be further filtered through query parameters

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={username|email|first_name|last_name}``` If search is non empty then a greedy search is performed

                ```?filter={condition}```
            tags:
                - UserAPI
            summary: Handles GET for all Users
            operationId: idGetAllUsersHandler
            parameters:
                - type: integer
                  format: int64
                  x-go-name: Page
                  name: page
                  in: query
                - x-go-name: PageSize
                  name: pageSize
                  in: query
                  type: integer
                  format: int64
                - type: string
                  x-go-name: Search
                  name: search
                  in: query
                - name: order
                  in: query
                  type: string
                  x-go-name: Order
                  description: 'in: order'
                - description: 'in: filter'
                  name: filter
                  in: query
                  type: string
                  x-go-name: Filter
            responses:
                "200":
                    description: Returns all users info
    /api/meshmodels/categories/{category}/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/components/Namespace
                Components can be further filtered through query parameter

                ```?model={model}``` If model is unspecified then all models are returned

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelComponentsByNameByCategory
            summary: Handle GET request for getting meshmodel components of a specific type category.
            operationId: idGetMeshmodelComponentsByNameByCategory
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
    /api/meshmodels/categories/{category}/models/{model}/components:
        get:
            summary: Handle GET request for getting meshmodel components of a specific model and category. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelComponentByModelByCategory
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/models/kubernetes/components
                Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelComponentByModelByCategory
    /api/meshmodels/relationships:
        get:
            summary: Handle GET request for getting all meshmodel relationships
            operationId: idGetAllMeshmodelRelationships
            responses:
                "200":
                    description: Returns meshmodel relationships
            description: |-
                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetAllMeshmodelRelationships
    /api/pattern/catalog/unpublish:
        delete:
            responses:
                "200":
                    description: ""
            description: Unpublishes pattern from Meshery Catalog by setting visibility to private and removing catalog data from website
            tags:
                - PatternsAPI
            summary: Handle Publish for a Meshery Pattern
            operationId: idUnPublishCatalogPatternHandler
    /api/user/performance/profiles/{id}/results:
        get:
            tags:
                - PerformanceAPI
            summary: Handle GET request for results of a profile
            operationId: idGETProfileResults
            parameters:
                - required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
            responses:
                "200":
                    description: Returns all performance results
            description: |-
                Fetches pages of results from provider for the given id

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={result_name|mesh|url}``` If search is non empty then a greedy search is performed
    /api/integrations/environments/{id}:
        get:
            tags:
                - EnvironmentAPI
            summary: Handle GET for Environment info by ID
            operationId: idGetEnvironmentByIDHandler
            responses:
                "200":
                    description: Returns environment
            description: Returns Environment info
        put:
            summary: Handle PUT request for updating a environment
            operationId: idUpdateEnvironmentHandler
            responses:
                "200":
                    description: Returns environment
            description: Updates a environment
            tags:
                - PostEnvironment
        delete:
            description: Returns Environment info
            tags:
                - EnvironmentAPI
            summary: Handle DELETE for Environment based on ID
            operationId: idDeleteEnvironmentHandler
            responses:
                "201":
                    description: ""
    /api/meshmodels/categories/{category}:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?search={[true/false]}``` If search is true then a greedy search is performed
            tags:
                - GetMeshmodelCategoriesByName
            summary: Handle GET request for getting all meshmodel categories of a given name
            operationId: idGetMeshmodelCategoriesByName
            responses:
                "200":
                    description: Returns meshmodel categories
    /api/schema/resource/{resourceName}:
        get:
            summary: Handles the request to retrieve and merge resource JSON schema and UI schema.
            operationId: HandleResourceSchemas
            responses: {}
    /api/perf/profile/result/{id}:
        get:
            responses:
                "200":
                    description: Returns Single test result
            description: Returns an individual result from provider
            tags:
                - PerfAPI
            summary: Handles GET requests for perf result
            operationId: idGetSinglePerfResult
    /api/system/version:
        get:
            tags:
                - SystemAPI
            summary: Handle GET request for system/server version
            operationId: idGetSystemVersion
            responses:
                "200":
                    description: Returns Meshery version
            description: Returns the running Meshery version
    /api/telemetry/metrics/grafana/boards:
        get:
            responses:
                "200":
                    description: Returns Grafana boards and panels
                    schema:
                        type: array
                        items: {}
            description: Used for fetching Grafana boards and panels
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana boards
            operationId: idGetGrafanaBoards
            parameters:
                - name: dashboardSearch
                  in: query
                  type: string
                  x-go-name: DashboardSearch
        post:
            operationId: idPostGrafanaBoards
            responses:
                "200":
                    description: ""
            description: Used for persist Grafana boards and panel selections
            tags:
                - GrafanaAPI
            summary: Handle POST request for Grafana boards
    /api/meshmodels/models/{model}/policies/:
        get:
            tags:
                - GetMeshmodelPolicies
            summary: Handle GET request for getting meshmodel policies of a specific model by name.
            operationId: idGetMeshmodelPolicies
            responses:
                "200":
                    description: Returns meshmodel policies
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/policies```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
    /api/telemetry/metrics/board_import:
        post:
            summary: Handle POST request for Prometheus board import
            operationId: idPostPrometheusBoardImport
            responses:
                "200":
                    description: Response for prometheus board import
            description: Used for importing Grafana board for Prometheus
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/grafana/config:
        get:
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana configuration
            operationId: idGetGrafanaConfig
            responses:
                "200":
                    description: Returns Grafana configs
            description: Used for fetching Grafana configuration
        post:
            description: Used for persisting Grafana configuration
            tags:
                - GrafanaAPI
            summary: Handle POST request for Grafana configuration
            operationId: idPostGrafanaConfig
            parameters:
                - required: true
                  schema: {}
                  name: Body
                  in: body
            responses:
                "200":
                    description: ""
        delete:
            summary: Handle DELETE request for Grafana configuration
            operationId: idDeleteGrafanaConfig
            responses:
                "200":
                    description: ""
            description: Used for Delete Grafana configuration
            tags:
                - GrafanaAPI
    /api/providers:
        get:
            description: Returns the available list of providers
            tags:
                - ProvidersAPI
            summary: Handle GET request for list of providers
            operationId: idGetProvidersList
            responses:
                "200":
                    description: Returns a list of available providers
                    schema:
                        type: object
                        additionalProperties: false
    /api/system/kubernetes:
        delete:
            summary: Handle DELETE request for Kubernetes Config
            operationId: idDeleteK8SConfig
            responses:
                "200":
                    description: ""
            description: Used to delete kubernetes config to System
            tags:
                - SystemAPI
        post:
            summary: Handle POST request for Kubernetes Config
            operationId: idPostK8SConfig
            responses:
                "200":
                    description: Returns saved kubernetes config
            description: Used to add kubernetes config to System
            tags:
                - SystemAPI
    /api/telemetry/metrics/config:
        get:
            description: Used for fetching Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle GET for Prometheus configuration
            operationId: idGetPrometheusConfig
            responses:
                "200":
                    description: Returns prometheus configuration
        post:
            description: Used for persisting Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle POST for Prometheus configuration
            operationId: idPostPrometheusConfig
            parameters:
                - x-go-name: PrometheusURL
                  name: prometheusURL
                  in: body
                  schema:
                    type: string
            responses:
                "200":
                    description: ""
        delete:
            responses:
                "200":
                    description: ""
            description: Used for deleting Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle DELETE for Prometheus configuration
            operationId: idDeletePrometheusConfig
    /api/events:
        get:
            description: |-
                Listens for events across all of Meshery's components like adapters and server, streaming them to the UI via Server Side Events
                This API call never terminates and establishes a persistent keep-alive connection over which `EventsResponse`s are pushed.
            tags:
                - EventsAPI
            summary: Handle GET request for events.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
    /api/events/bulk:
        delete:
            description: Bulk delete events associated with the ids.
            summary: Handle DELETE request to delete events in bulk.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
    /api/user/login:
        get:
            description: Redirects user for auth or issues session
            tags:
                - UserAPI
            summary: Handlers GET request for User login
            operationId: idGetUserLogin
            responses:
                "200":
                    description: ""
    /api/events/status/{id}:
        put:
            responses:
                "200":
                    description: Returns event
            description: Updates event status for the event associated with the id.
            summary: Handle PUT request to update event status.
            operationId: idGetEventStreamer
    /api/events/{id}:
        delete:
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            description: Deletes event associated with the id.
            summary: Handle DELETE request for events.
    /api/system/meshsync/resources:
        get:
            summary: Handle GET request for meshsync discovered resources
            operationId: idGetMeshSyncResources
            responses:
                "200":
                    description: Returns MeshSync resources
            description: |-
                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotation={annotaion}``` annotation is a boolean value. If true then annotations are returned

                ```?labels={labels}``` labels is a boolean value. If true then labels are returned

                ```?spec={spec}``` spec is a boolean value. If true then spec is returned

                ```?status={status}``` status is a boolean value. If true then status is returned

                ```?clusterId={clusterId}``` clusterId is a string value. If specified then resources for that cluster are returned
            tags:
                - GetMeshSyncResources
    /api/telemetry/metrics/grafana/scan:
        get:
            description: Fetches and returns Grafana
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana
            operationId: idGetGrafana
            responses:
                "200":
                    description: Returns a map for v1 services
                    schema:
                        additionalProperties: false
                        type: object
    /api/filter/catalog/publish:
        post:
            tags:
                - FiltersAPI
            summary: Handle Publish for a Meshery Filter
            operationId: idPublishCatalogFilterHandler
            responses:
                "202":
                    description: ""
            description: Publishes filter to Meshery Catalog by setting visibility to published and setting catalog data
    /api/meshmodels/models/{model}/components/{name}:
        get:
            tags:
                - GetMeshmodelComponentsByNameByModel
            summary: Handle GET request for getting meshmodel components of a specific  model.
            operationId: idGetMeshmodelComponentsByNameByModel
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/components/Namespace```
                Components can be further filtered through query parameter

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
    /api/pattern:
        get:
            description: |-
                Returns the list of all the patterns saved by the current user
                This will return all the patterns with their details

                ```?order={field}``` orders on the passed field

                ```?search=<design name>``` A string matching is done on the specified design name

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?visibility={[visibility]}``` Default visibility is public + private; Mulitple visibility filters can be passed as an array
                Eg: ```?visibility=["public", "published"]``` will return public and published designs
            tags:
                - PatternsAPI
            summary: Handle GET request for patterns
            operationId: idGetPatternFiles
            responses:
                "200":
                    description: Returns all meshery patterns
        post:
            description: Edit/update a meshery pattern
            tags:
                - PatternsAPI
            summary: Handle POST requests for patterns
            operationId: idPostPatternFile
            responses:
                "200":
                    description: Returns a single meshery pattern
    /api/system/adapter/operation:
        post:
            parameters:
                - type: string
                  x-go-name: Adapter
                  name: adapter
                  in: query
                - x-go-name: Query
                  name: query
                  in: query
                  type: string
                - type: string
                  x-go-name: CustomBody
                  name: customBody
                  in: query
                - type: string
                  x-go-name: Namespace
                  name: namespace
                  in: query
                - name: deleteOp
                  in: query
                  type: string
                  x-go-name: Delete
            responses:
                "200":
                    description: ""
            description: Used to send operations to the adapters
            tags:
                - SystemAPI
            summary: Handle POST requests for Adapter Operations
            operationId: idPostAdapterOperation
    /api/telemetry/metrics/query:
        get:
            description: Used to prometheus queries
            tags:
                - PrometheusAPI
            summary: Handle GET request for Prometheus Query
            operationId: idGetPrometheusQuery
            responses:
                "200":
                    description: ""
    /api/v2/events:
        get:
            description: |-
                ```search={description}``` If search is non empty then a search is performed on event description
                ```?category=[eventcategory] Returns event belonging to provided categories ```
                ```?action=[eventaction] Returns events belonging to provided actions ```
                ```?status={[read/unread]}``` Return events filtered on event status Default is unread````
                ```?severity=[eventseverity] Returns events belonging to provided severities ```
                ```?sort={field} order the records based on passed field, defaults to updated_at```
                ```?order={[asc/desc]}``` Default behavior is desc
                ```?page={page-number}``` Default page number is 1
                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - EventsAPI
            summary: Handle GET request for events.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: Returns all events
    /api/events/types:
        get:
            summary: Handle GET request for available event categories and actions.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            tags:
                - EventsAPI
    /api/filter:
        get:
            responses:
                "200":
                    description: Returns all meshery filters
            description: |-
                # Returns the list of all the filters saved by the current user

                ```?order={field}``` orders on the passed field

                ```?search=<filter name>``` A string matching is done on the specified filter name

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?visibility={[visibility]}``` Default visibility is public + private; Mulitple visibility filters can be passed as an array
                Eg: ```?visibility=["public", "published"]``` will return public and published filters
            tags:
                - FiltersAPI
            summary: Handle GET request for filters
            operationId: idGetFilterFiles
        post:
            description: Used to save/update a Meshery Filter
            tags:
                - FiltersAPI
            summary: Handle POST requests for Meshery Filters
            operationId: idPostFilterFile
            responses:
                "200":
                    description: Returns a single meshery filter
    /api/integrations/environments/{environmentID}/connections/{connectionID}:
        post:
            description: Returns Environment connection mapping info
            tags:
                - EnvironmentAPI
            summary: Handle POST to add Connection in Environment by ID
            operationId: idAddConnectionToEnvironmentHandler
            responses:
                "200":
                    description: Returns environment
        delete:
            summary: Handle DELETE to remove Connection from Environment by ID
            operationId: idRemoveConnectionFromEnvironmentHandler
            responses:
                "201":
                    description: ""
            description: Removes connection from environment
            tags:
                - EnvironmentAPI
    /api/provider/capabilities:
        get:
            operationId: idGetProviderCapabilities
            responses:
                "200":
                    description: ""
            description: Returns the capabilities.json for the provider
            tags:
                - ProvidersAPI
            summary: Handle GET requests for Provider
    /api/filter/catalog:
        get:
            description: |-
                # Filters can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10.

                ```?search={filtername}``` If search is non empty then a greedy search is performed
            tags:
                - FiltersAPI
            summary: Handle GET request for catalog filters
            operationId: idGetCatalogMesheryFiltersHandler
            responses:
                "200":
                    description: Returns all meshery filters
    /api/integrations/connections/{connectionKind}:
        put:
            operationId: idPutConnection
            responses:
                "200":
                    description: ""
            description: Updates existing connection
            tags:
                - PutConnection
            summary: Handle PUT request for updating an existing connection
        get:
            summary: Handle GET request for getting all connections for a given kind.
            operationId: idGetConnectionsByKind
            responses:
                "200":
                    description: ""
                    headers:
                        connections:
                            type: array
                            items: {}
                        page:
                            type: integer
                            format: int64
                        page_size:
                            format: int64
                            type: integer
                        total_count:
                            type: integer
                            format: int64
            description: |-
                ```?order={field}``` orders on the passed field

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            tags:
                - GetConnectionsByKind
    /api/smi/results:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={status|mesh_version|mesh_name|date|id}``` If search is non empty then a greedy search is performed
            tags:
                - Smi
            summary: Handle GET request for the results of all the smi conformance tests
            operationId: idFetchSmiResults
            responses:
                "200":
                    description: Returns SMI results
    /api/user/prefs:
        get:
            summary: Handle GET Requests for User Load Test Preferences
            operationId: idGetUserTestPrefs
            responses:
                "200":
                    description: Returns User Load Test Preferencee
            description: Returns User Load Test Preferences
            tags:
                - UserAPI
        post:
            tags:
                - UserAPI
            summary: Handle POST Requests for User Load Test Preferences
            operationId: idPostUserTestPrefs
            responses:
                "200":
                    description: Returns User Load Test Preferencee
            description: Updates User Load Test Preferences
    /api/content/filter/share:
        post:
            tags:
                - ShareContent
            summary: Handle POST request for Sharing content
            operationId: idPostShareContent
            responses:
                "200":
                    description: ""
                "403":
                    description: ""
                "500":
                    description: ""
            description: Used to share filters with others
    /api/pattern/catalog/publish:
        post:
            description: Publishes pattern to Meshery Catalog by setting visibility to published and setting catalog data
            tags:
                - PatternsAPI
            summary: Handle Publish for a Meshery Pattern
            operationId: idPublishCatalogPatternHandler
            responses:
                "202":
                    description: ""
    /api/system/database:
        get:
            description: |-
                # Tables can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10. To return all results: ```pagesize=all```

                ```?search={tablename}``` If search is non empty then a greedy search is performed
            tags:
                - GetSystemDatabase
            summary: Handle GET request for getting summary about the system database.
            operationId: idGetSystemDatabase
            responses:
                "200":
                    description: Returns database summary
    /api/system/meshsync/prometheus:
        get:
            description: Fetches Prometheus
            tags:
                - SystemAPI
            summary: Handle GET request for fetching prometheus
            operationId: idMeshSyncPrometheus
            responses:
                "200":
                    description: Returns a map for v1 services
                    schema:
                        type: object
                        additionalProperties: false
    /api/user/performance/profiles/{id}/run:
        get:
            description: Runs the load test with the given parameters
            tags:
                - PerformanceAPI
            summary: Handle GET request to run a performance test
            operationId: idRunPerformanceTest
            parameters:
                - in: query
                  name: Body
            responses:
                "200":
                    description: ""
    /api/filter/clone/{id}:
        post:
            description: 'Creates a local copy of a published filter with id: id'
            tags:
                - FiltersAPI
            summary: Handle Clone for a Meshery Filter
            operationId: idCloneMesheryFilter
            responses:
                "200":
                    description: ""
    /api/filter/deploy:
        post:
            tags:
                - FilterAPI
            summary: Handle POST request for Filter File Deploy
            operationId: idPostDeployFilterFile
            responses:
                "200":
                    description: Returns the response of the Filter files
            description: Deploy an attached filter file with the request
        delete:
            tags:
                - FilterAPI
            summary: Handle DELETE request for Filter File Deploy
            operationId: idDeleteFilterFile
            responses:
                "200":
                    description: ""
            description: Delete a deployed filter file with the request
    /api/meshmodels/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/components/Namespace```
                Components can be further filtered through query parameter

                ```?model={model}``` If model is unspecified then all models are returned

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetAllMeshmodelComponentsByName
            summary: Handle GET request for getting meshmodel components of a specific type by name across all models and categories
            operationId: idGetAllMeshmodelComponentsByName
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
    /api/user/performance/profiles/results:
        get:
            operationId: idGetAllPerformanceResults
            responses:
                "200":
                    description: Returns all performance results
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?from={date}``` Date must be in yyyy-mm-dd format

                ```?to={date}``` Date must be in yyyy-mm-dd format
            tags:
                - PerformanceAPI
            summary: Handles GET requests for performance results
    /api/system/meshsync/grafana:
        get:
            summary: Handle GET request for mesh-sync grafana
            operationId: idMeshSyncGrafana
            responses:
                "200":
                    description: Returns a map for v1 services
                    schema:
                        type: object
                        additionalProperties: false
            description: Fetches Prometheus and Grafana
            tags:
                - SystemAPI
    /api/application:
        get:
            summary: Handle GET request for Application Files
            operationId: idGetMesheryApplications
            responses:
                "200":
                    description: Returns all meshery applications
            description: |-
                Fetches the list of all applications saved by the current user

                ```?updated_after=<timestamp>``` timestamp should be of the format "YYYY-MM-DD HH:MM:SS"

                ```?order={field}``` orders on the passed field

                ```?search=<application name>``` A string matching is done on the specified application name

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            tags:
                - ApplicationsAPI
    /api/application/deploy:
        post:
            summary: Handle POST request for Application File Deploy
            operationId: idPostDeployApplicationFile
            parameters:
                - in: formData
                  type: file
                  x-go-name: FormFile
                  name: Upload Yaml/Yml File
            responses:
                "200":
                    description: Returns the response of the application files
            description: Deploy an attached application file with the request
            tags:
                - ApplicationsAPI
        delete:
            tags:
                - ApplicationsAPI
            summary: Handle DELETE request for Application File Deploy
            operationId: idDeleteApplicationFile
            responses:
                "200":
                    description: ""
            description: Delete a deployed application file with the request
    /api/application/{id}:
        delete:
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: ""
            description: 'Deletes a meshery application file with ID: id'
            tags:
                - ApplicationsAPI
            summary: Handle Delete for a Meshery Application File
            operationId: idDeleteMesheryApplicationFile
    /api/meshmodels/models/{model}/relationships/{name}:
        get:
            tags:
                - GetMeshmodelRelationshipByName
            summary: Handle GET request for getting meshmodel relationships of a specific model by name.
            operationId: idGetMeshmodelRelationshipByName
            responses:
                "200":
                    description: Returns meshmodel relationships
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/relationships/Edge```

                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
    /api/perf/profile/result:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?from={date}``` Date must be in yyyy-mm-dd format

                ```?to={date}``` Date must be in yyyy-mm-dd format
            tags:
                - PerfAPI
            summary: Handles GET requests for perf results
            operationId: idGetAllPerfResults
            responses:
                "200":
                    description: Returns all performance results
    /api/system/adapter/manage:
        post:
            description: Used to persist adapter config
            tags:
                - SystemAPI
            summary: Handle POST requests to persist adapter config
            operationId: idPostAdapterConfig
            parameters:
                - schema:
                    type: string
                  x-go-name: MeshLocationURL
                  name: meshLocationURL
                  in: body
            responses:
                "200":
                    description: Returns all the meshery adapters
                    schema:
                        type: array
                        items: {}
        delete:
            summary: Handle DELETE requests to delete adapter config
            operationId: idDeleteAdapterConfig
            parameters:
                - name: adapter
                  in: query
                  type: string
                  x-go-name: Adapter
            responses:
                "200":
                    description: ""
            description: Used to delete adapter configuration
            tags:
                - SystemAPI
    /api/system/database/reset:
        delete:
            description: |-
                This endpoint resets the system database to its initial state by performing the following steps:
                Creates an archive of the current database contents.
                Drops all existing tables in the database.
                Applies auto migration to recreate the necessary tables.
            summary: Reset the system database to its initial state.
            operationId: ResetSystemDatabase
            responses:
                "200":
                    description: ""
                "500":
                    description: ""
definitions:
    AuthenticateOKBody:
        description: AuthenticateOKBody authenticate o k body
        x-go-package: github.com/docker/docker/api/types/registry
    PluginConfig:
        title: PluginConfig The config of a plugin.
        x-go-package: github.com/docker/docker/api/types
    PluginConfigInterface:
        description: PluginConfigInterface The interface between Docker and the plugin
        x-go-package: github.com/docker/docker/api/types
    PluginConfigNetwork:
        description: PluginConfigNetwork plugin config network
        x-go-package: github.com/docker/docker/api/types
    PluginConfigUser:
        description: PluginConfigUser plugin config user
        x-go-package: github.com/docker/docker/api/types
    PluginMount:
        description: PluginMount plugin mount
        x-go-package: github.com/docker/docker/api/types
    WaitResponse:
        description: OK response to ContainerWait operation
        title: WaitResponse ContainerWaitResponse
        x-go-package: github.com/docker/docker/api/types/container
    Port:
        description: Port An open port on a container
        x-go-package: github.com/docker/docker/api/types
    ContainerUpdateOKBody:
        description: ContainerUpdateOKBody OK response to ContainerUpdate operation
        x-go-package: github.com/docker/docker/api/types/container
    HistoryResponseItem:
        description: HistoryResponseItem individual image layer information in response to ImageHistory operation
        x-go-package: github.com/docker/docker/api/types/image
    ImageSummary:
        description: ImageSummary image summary
        x-go-package: github.com/docker/docker/api/types
    ListResponse:
        x-go-package: github.com/docker/docker/api/types/volume
        description: Volume list response
        title: ListResponse VolumeListResponse
    PluginConfigLinux:
        description: PluginConfigLinux plugin config linux
        x-go-package: github.com/docker/docker/api/types
    PluginInterfaceType:
        description: PluginInterfaceType plugin interface type
        x-go-package: github.com/docker/docker/api/types
    ServiceUpdateResponse:
        x-go-package: github.com/docker/docker/api/types
        description: ServiceUpdateResponse service update response
    WaitExitError:
        description: WaitExitError container waiting error, if any
        x-go-package: github.com/docker/docker/api/types/container
    CreateOptions:
        description: Volume configuration
        title: CreateOptions VolumeConfig
        x-go-package: github.com/docker/docker/api/types/volume
    PluginConfigArgs:
        description: PluginConfigArgs plugin config args
        x-go-package: github.com/docker/docker/api/types
    PluginConfigRootfs:
        description: PluginConfigRootfs plugin config rootfs
        x-go-package: github.com/docker/docker/api/types
    PluginDevice:
        description: PluginDevice plugin device
        x-go-package: github.com/docker/docker/api/types
    PluginSettings:
        title: PluginSettings Settings that can be modified by users.
        x-go-package: github.com/docker/docker/api/types
    Volume:
        description: Volume volume
        x-go-package: github.com/docker/docker/api/types/volume
    ContainerTopOKBody:
        x-go-package: github.com/docker/docker/api/types/container
        description: ContainerTopOKBody OK response to ContainerTop operation
    GraphDriverData:
        description: |-
            GraphDriverData Information about the storage driver used to store the container's and
            image's filesystem.
        x-go-package: github.com/docker/docker/api/types
    UsageData:
        description: |-
            UsageData Usage details about the volume. This information is used by the
            `GET /system/df` endpoint, and omitted in other endpoints.
        x-go-package: github.com/docker/docker/api/types/volume
    IdResponse:
        description: IDResponse Response to an API call that returns just an Id
        x-go-name: IDResponse
        x-go-package: github.com/docker/docker/api/types
    ImageDeleteResponseItem:
        description: ImageDeleteResponseItem image delete response item
        x-go-package: github.com/docker/docker/api/types
    ContainerChangeResponseItem:
        x-go-package: github.com/docker/docker/api/types/container
        description: ContainerChangeResponseItem change item in response to ContainerChanges operation
    CreateResponse:
        description: OK response to ContainerCreate operation
        title: CreateResponse ContainerCreateResponse
        x-go-package: github.com/docker/docker/api/types/container
    ErrorResponse:
        x-go-package: github.com/docker/docker/api/types
        title: ErrorResponse Represents an error.
    Plugin:
        description: Plugin A plugin for the Engine API
        x-go-package: github.com/docker/docker/api/types
    PluginEnv:
        description: PluginEnv plugin env
        x-go-package: github.com/docker/docker/api/types
responses:
    userInfo:
        description: Returns user info
    EventsResponse:
        description: ""
        headers:
            events:
                type: array
                items: {}
            page:
                type: integer
                format: int64
            page_size:
                type: integer
                format: int64
            total_count:
                type: integer
                format: int64
            count_by_severity_level:
                type: array
                items: {}
    meshmodelPoliciesResponseWrapper:
        description: Returns meshmodel policies
    prometheusConfigResponseWrapper:
        description: Returns prometheus configuration
    perfSingleResultRespWrapper:
        description: Returns Single test result
    systemAdaptersRespWrapper:
        description: Return all the adapters
        schema:
            type: array
            items: {}
    meshmodelComponentsResponseWrapper:
        description: Return meshmodel components
    listProvidersRespWrapper:
        description: Returns a list of available providers
        schema:
            type: object
            additionalProperties: false
    mesheryApplicationResponseWrapper:
        description: Fetches a single Meshery Application
    mesheryFiltersResponseWrapper:
        description: Returns all meshery filters
    mesheryAdaptersRespWrapper:
        description: Returns all the meshery adapters
        schema:
            items: {}
            type: array
    meshmodelRegistrantsResponseWrapper:
        description: Returns meshmodel registrants
    meshsyncResourcesResponseWrapper:
        description: Returns MeshSync resources
    meshmodelCategoriesResponseWrapper:
        description: Returns meshmodel categories
    perfTestPrefsRespWrapper:
        description: Returns Perf test preference
    prometheusBoardImportRespWrapper:
        description: Response for prometheus board import
    mesheryVersionRespWrapper:
        description: Returns Meshery version
    v1ServicesMapResponseWrapper:
        description: Returns a map for v1 services
        schema:
            type: object
            additionalProperties: false
    Connection:
        description: ""
        schema:
            type: object
            additionalProperties: false
        headers:
            kind:
                type: string
            metadata: {}
            name:
                type: string
            sub_type:
                type: string
            updated_at:
                format: date-time
                type: string
            id: {}
            credential_id: {}
            deleted_at: {}
            status: {}
            type:
                type: string
            user_id: {}
            created_at:
                type: string
                format: date-time
    keys:
        description: Returns users Keys
        headers:
            Body: {}
    mesheryPatternResponseWrapper:
        description: Returns a single meshery pattern
    Model:
        description: ""
        schema:
            type: object
            additionalProperties: false
        headers:
            hostID: {}
            hostname:
                type: string
            metadata: {}
            name:
                type: string
            version:
                type: string
            category: {}
            displayName:
                type: string
            displayhostname:
                type: string
    environmentsResponseWrapper:
        description: Returns all environements
    userLoadTestPrefsRespWrapper:
        description: Returns User Load Test Preferencee
    Category:
        description: ""
        schema:
            type: object
            additionalProperties: false
        headers:
            metadata: {}
            name:
                type: string
    ConnectionPage:
        description: ""
        headers:
            connections:
                type: array
                items: {}
            page:
                type: integer
                format: int64
            page_size:
                type: integer
                format: int64
            total_count:
                type: integer
                format: int64
    FilterFilesResponseWrapper:
        description: Returns the response of the Filter files
    mesheryFilterResponseWrapper:
        description: Returns a single meshery filter
    ConnectionStatus:
        description: ""
        schema: {}
    ConnectionsStatusPage:
        description: ""
        headers:
            connections_status:
                type: array
                items: {}
    eventResponseWrapper:
        description: Returns event
    grafanaConfigResponseWrapper:
        description: Returns Grafana configs
    meshmodelModelsDuplicateResponseWrapper:
        description: Return meshmodel models with the count of duplicates
    performanceProfilesResponseWrapper:
        description: Returns all the performance profiles
    meshmodelRelationshipsResponseWrapper:
        description: Returns meshmodel relationships
    schedulesResponseWrapper:
        description: Returns List of saved schedules
    singleScheduleResponseWrapper:
        description: Returns a single schedules
    smiResultsResponseWrapper:
        description: Returns SMI results
    k8sContextsRespWrapper:
        description: Returns kubernetes context list
    mesheryPatternsResponseWrapper:
        description: Returns all meshery patterns
    meshmodelModelsResponseWrapper:
        description: Returns meshmodel models
    performanceProfileResponseWrapper:
        description: Returns a single performance profile
    ComponentDefinition:
        description: ""
        schema:
            additionalProperties: false
            type: object
        headers:
            displayName:
                type: string
            displayhostname:
                type: string
            model: {}
            schema:
                type: string
            apiVersion:
                type: string
            format: {}
            hostID: {}
            hostname:
                type: string
            kind:
                type: string
            metadata: {}
    environmentResponseWrapper:
        description: Returns environment
    loadTestPreferencesWrapper:
        description: Returns load test preferences
    applicationFilesResponseWrapper:
        description: Returns the response of the application files
    eventsResponseWrapper:
        description: Returns all events
    k8sConfigRespWrapper:
        description: Returns saved kubernetes config
    meshmodelComponentsDuplicateResponseWrapper:
        description: Return meshmoddel components with the count of duplicates
    noContentWrapper:
        description: ""
    mesheryConnectionsStatusPage:
        description: Returns all connections Status
    performanceResultsResponseWrapper:
        description: Returns all performance results
    systemDatabaseResponseWrapper:
        description: Returns database summary
    grafanaBoardsResponseWrapper:
        description: Returns Grafana boards and panels
        schema:
            type: array
            items: {}
    mesheryApplicationTypesResponseWrapper:
        description: Returns Meshery application types
        schema:
            type: array
            items: {}
    mesheryApplicationsResponseWrapper:
        description: Returns all meshery applications
    systemK8sContextsResponseWrapper:
        description: Returns K8s contexts
    users:
        description: Returns all users info
    RelationshipDefinition:
        schema:
            additionalProperties: false
            type: object
        headers:
            apiVersion:
                type: string
            hostname:
                type: string
            model: {}
            subType:
                type: string
            selectors: {}
            displayhostname:
                type: string
            hostID: {}
            kind:
                type: string
            metadata: {}
        description: |-
            https://docs.google.com/drawings/d/1_qzQ_YxvCWPYrOBcdqGMlMwfbsZx96SBuIkbn8TfKhU/edit?pli=1
            see RELATIONSHIPDEFINITIONS table in the diagram
    mesheryConnectionResponseWrapper:
        description: Returns a single connection
    prometheusStaticBoardRespWrapper:
        description: Returns Prometheus static board
        schema:
            type: object
            additionalProperties: false
securityDefinitions:
    token:
        type: apiKey
        name: token
        in: cookie
security:
    - token:
        - '[]'
